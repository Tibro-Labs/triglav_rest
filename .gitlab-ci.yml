stages:
  - copy_dependencies_and_build
  - deploy
  - sonarqube
  - selenium_nightwatch

before_script:
  - git reset --hard HEAD
  - git clean -df
  - git stash
  - git pull origin $CI_COMMIT_REF_NAME

triglav_rest:
  stage: copy_dependencies_and_build
  script:
    - git remote set-url origin git@gitlab.prtech.mk:prtech/triglav_rest.git
    - git fetch origin $CI_COMMIT_REF_NAME
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    - git checkout $CI_COMMIT_REF_NAME
    - git clean -df
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    - git stash
    - git pull
    - rm -rf /home/gitlab-runner/builds/27628e38/0/prtech/build/triglav_rest.war
    # copy jars to lib
    - LATEST_SVAROG=$(cd /home/gitlab-runner/JARS/${CI_COMMIT_REF_NAME}/ && ls svarog-2.* | sort -V | tail -n 1)
    - git rm WebContent/WEB-INF/lib/svarog-2.* || true
    - cp /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/$LATEST_SVAROG WebContent/WEB-INF/lib/
    - cp /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/svarog_batch_executor-1.0_dev.jar WebContent/WEB-INF/lib/
    - cp /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/svarog_reports-1.0_dev.jar WebContent/WEB-INF/lib/
    # copy plugins
    - mkdir -p WebContent/plugins
    - cp /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/afpzrr_sop_triglav_plugin-1.0_dev.jar WebContent/plugins
    - cp /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/afsard_triglav_plugin-1.0_dev.jar WebContent/plugins
    - cp /home/gitlab-runner/JARS/master/aleph_triglav_plugin-1.0_dev.jar WebContent/plugins
    - cp /home/gitlab-runner/JARS/master/naits_triglav_plugin-1.0_dev.jar WebContent/plugins
    - cp /home/gitlab-runner/JARS/master/react_triglav_plugin-1.0_dev.jar WebContent/plugins
    # copy conf JSONS form svarog
    - mkdir -p WebContent/WEB-INF/classes/
    #- cp -rf /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/conf WebContent/WEB-INF/classes/
    # build triglav and copy to temp build dir since gitlab-ci can copy artefacts only from repo path
    - ant triglav_rest -DCI_PIPELINE_ID=$CI_PIPELINE_ID -Dcommit_sha=$CI_COMMIT_SHA -DCI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME
    # transfer war
    - mkdir -p build
    - mkdir -p /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME
    - rm -rf /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/triglav_rest*
    - rm -rf /home/gitlab-runner/JARS/triglav_rest*
    - cp ../build/triglav_rest.war build
    - cp ../build/triglav_rest.war /home/gitlab-runner/JARS/$CI_COMMIT_REF_NAME/
    - rm -rf ../build/triglav_rest.war
    - ls -lah build/triglav_rest.war
    # commit libs to triglav lib dir
    # - git -C $CI_PROJECT_DIR add WebContent/WEB-INF/lib/
    # - git -C $CI_PROJECT_DIR add WebContent/plugins
    # - git -C $CI_PROJECT_DIR commit -m "Push latest dependencies for branch $CI_COMMIT_REF_NAME" || exit 0
    # - git -C $CI_PROJECT_DIR push origin HEAD:$CI_COMMIT_REF_NAME
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
    - build/triglav_rest.war
    expire_in: 15 days
  only:
    - master
    - dev
    - staging

deploy:
  stage: deploy
  script:
    - git -C ../gitlab-ci remote set-url origin git@gitlab.prtech.mk:prtech/gitlab-ci.git
    - git -C ../gitlab-ci reset --hard HEAD
    - git -C ../gitlab-ci clean -df
    - git -C ../gitlab-ci checkout master
    - git -C ../gitlab-ci pull
    - cd ../gitlab-ci/ansible
    - ./ansible-gitlab-ci.sh $CI_COMMIT_REF_NAME tomcat $CI_PROJECT_DIR
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - master
    - dev
    - staging


static_analysis:
  stage: sonarqube
  script:
    - sonar-scanner -Dsonar.sources=. -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.analysis.mode=preview -Dsonar.login=a02003f1f8f90382d7570b57a85c00c38132f85f -Dsonar.branch=$CI_COMMIT_REF_NAME -Dsonar.projectName=$CI_PROJECT_NAME -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID
    - sonar-scanner -Dsonar.sources=. -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.analysis.mode=publish -Dsonar.login=a02003f1f8f90382d7570b57a85c00c38132f85f -Dsonar.branch=$CI_COMMIT_REF_NAME -Dsonar.projectName=$CI_PROJECT_NAME

nightwatch:
  stage: selenium_nightwatch
  script:
    - git -C ../gitlab-ci remote set-url origin git@gitlab.prtech.mk:prtech/gitlab-ci.git
    - git -C ../gitlab-ci reset --hard HEAD
    - git -C ../gitlab-ci clean -df
    - git -C ../gitlab-ci checkout master
    - git -C ../gitlab-ci pull
    - cd ../gitlab-ci/ansible
    - ./ansible-gitlab-ci.sh $CI_COMMIT_REF_NAME selenium $CI_PROJECT_DIR
  environment:
    name: "${CI_COMMIT_REF_NAME}_selenium_tests"
  only:
    - master
    - dev
    - staging
  artifacts:
    name: "Selenium_reports_${CI_COMMIT_REF_NAME}"
    paths:
    - reports.zip
    expire_in: 7 days
    when: always
